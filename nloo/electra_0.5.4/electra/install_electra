#!/bin/tcsh -f

#############################################################################
## Program name   : install_electra                                        ##
## Description    : Compile and install electra package                    ##
## Version        : 1.3                                                    ##
## Date           : 04/06/06                                               ##
## Type           : shell script                                           ##
## Language       : TC-shell                                               ##
## Author         : Giovanni Cardone, NIH                                  ##
##                                                                         ##
## Options        :                                                        ##
##                  clean        Remove object files and exit              ##
##                  bin_dir=[]   path where to install the binaries        ##
##                  32           Compile 32 bit code                       ##
##                               (only for IRIX64, x86_64 and ppc64)       ##
##                  nowarn       Don't show warnings                       ##
##                  wall         Show all warnings                         ##
##                  file=t.txt   File to use in the platform directory     ##
##                  help         Show the help and exit                    ##
##                                                                         ##
## Output         : none                                                   ##
##                                                                         ##
## Requirements   : none                                                   ## 
## OS supported   : GNU/Linux, IRIX, OSF1, Darwin/MacOSX, IBM/AIX          ##
## Notes          : the script is adapted from bmake in Bsoft package      ##
##                                                                         ##
#############################################################################

#----------------------------------------------------------
# Parsing the arguments
#----------------------------------------------------------

set WARN = ""
set OFILES = ""
set LOCAL = 0
set NEWDIR = 0
set SET32 = 0
set CLEAN = 0
foreach ARG ( $* )
	if ( $ARG == "nowarn" ) then
		set WARN = "-w"
	else if ( $ARG == "wall" ) then
		set WARN = "-Wall"
    else if ( `expr $ARG : "bin_dir="` == 8 ) then
    		set INSTDIR = `echo $ARG | cut -f2,2 -d=`
		set NEWDIR = 1
	else if ( $ARG == "32" ) then
		set SET32 = 1
	else if ( $ARG == "clean" ) then
		set CLEAN = `expr $CLEAN + 1`
	else if ( $ARG =~ file* ) then
		set PLATFORM = `echo $ARG | cut -d"=" -f2,2`
	else if ( $ARG == "help" ) then
		echo " "
		echo " USAGE: install_electra [options]"
		echo " "
		echo " Without any option, the package Electra is compiled and the programs are installed"
		echo " in the subdirectory bin. In this case you need to add this subdirectory to your path, "
		echo " in order to be able to launch the programs."
		echo " "
		echo " OPTIONS:"
		echo "   bin_dir=[]      directory path where to install the programs."
		echo " "
		echo "   clean           Remove object files and exit."
		echo " "
		echo "   32              Compile 32 bit code (only for IRIX64, x86_64 and ppc64)."
		echo " "
		echo "   nowarn          Don't show warnings."
		echo " "
		echo "   wall            Show all warnings."
		echo " "
		echo "   file=t.txt      File with settings to use, that is present in the platform directory (don't give the path, just the file name)"
		echo " "
		echo "   help            Show this message and exit."
		echo " "
		exit
	else
		set OFILES = ($OFILES $ARG'.o')
	endif
end
if ( $%OFILES < 2 ) set OFILES = "*.o"


#----------------------------------------------------------
# Cleaning out files if required
#----------------------------------------------------------

if ( $CLEAN ) then
	rm -f src/*.o src/*/*.o
	rm -f lib/*.a
    rm -f fftw/*.o bsoft/src/*/*.o
	exit
endif

echo " "

#----------------------------------------------------------
# Check if environment variables for Bsoft are set             
#----------------------------------------------------------


#----------------------------------------------------------
# Directories for the package and the binaries             
#     CHANGE TO SUIT INSTALLATION                          
#----------------------------------------------------------

set ET = `pwd`
if ( $?PWD ) set ET = $PWD
if ( $NEWDIR ) then
	set TMPDIR = `expr $INSTDIR : "/*\(.*\)"`
	if ( `expr $TMPDIR : ".*"` == `expr $INSTDIR : ".*" - 1` ) then
		set ETBIN = $INSTDIR
	else
		set ETBIN = $ET/$INSTDIR
	endif
	unset $TMPDIR
else
	set ETBIN = $ET'/bin'
endif
if ( ! ( -d $ETBIN ) ) then
	echo "Creating directory $ETBIN, where binaries will be copied."
	mkdir $ETBIN
endif
if ( ! ( -w $ETBIN ) ) then
    echo "You do not have permission to write to $ETBIN"
    echo "Change target directory, or run this command with sudo or as root."
    exit 1
endif


set ETLIB = $ET'/lib'
if ( ! ( -d lib ) ) mkdir lib


#----------------------------------------------------------
# These variables can be specified for each platform
#   - what follows are defaults
#----------------------------------------------------------

set AR = 'ar rcs'
set LINKOPTS = ' '


#----------------------------------------------------------
# System identification and compiler selection             
#  - modify variables in the files in the compilers subdirectory                          
#----------------------------------------------------------

set SYS = `uname -s | cut -f1,1 -d"-"`
set MACHINE = `uname -m`
set PROC = `uname -p`
set CCVERSION = '-'

if ( ! $?PLATFORM ) then
        set PLATFORM = ${MACHINE}_${SYS}
        if ( ! ( -e $ET/platform/$PLATFORM ) ) then
                set PLATFORM = ${PROC}_${SYS}
                if ( ! ( -e $ET/platform/$PLATFORM ) ) then
                        echo "Error: No platform $PLATFORM found!"
                        echo "You can try to use the option file= and point to some compatible settings in the subdirectory platform"
                endif
        endif
endif

source $ET/platform/$PLATFORM

#----------------------------------------------------------
# Package subdirectories, path to includes and libraries   
#----------------------------------------------------------

set ETSRC = $ET'/src'
set SUBDIR = 'poly util imod'
set POLY = $ET'/src/poly'
set BSOFT = $ET'/bsoft/src'
set BSUBDIR = 'util rwimg img rwparam'
set BINCLUDE = $ET'/bsoft/include'
set FFTW = $ET'/fftw'

set INCLUDES = '-I./ -I'$ET'/include -I'$POLY' -I'$BINCLUDE' -I'$FFTW
set LIBDIR = '-L'$ETLIB
#set LIBS = '-lelectra -lbsoft -lm'
set LIBS = '-lelectra -lbsoft -lfftw -lm'
#if ( $SET32 ) set LIBS = '-lelectra32 -lbsoft32 -lm'
if ( $SET32 ) set LIBS = '-lelectra32 -lbsoft32 -lfftw -lm'


#----------------------------------------------------------
# Informational output                                     
#----------------------------------------------------------

echo " "
echo "------------------------------------------------------------"
echo "	Electra: compiling and linking settings"
echo "------------------------------------------------------------"
echo "Version:                      "`cat VERSION`
echo "System:                       ${SYS}"
echo "Machine:                      $MACHINE"
echo "C compiler:                   ${C} (${CCVERSION})"
echo "C++ compiler:                 ${CC}"
echo "Compiler flags                $CFLAGS"
echo "Linker options:               $LINKOPTS"
echo "Warning flag:                 $WARN"
echo "Electra root directory:       $ET"
echo "Electra sources:              $ETSRC"
echo "Source subdirectories:        $SUBDIR"
echo "Electra binaries:             $ETBIN"
echo "Library directories:          $LIBDIR"
echo "Electra includes:             $INCLUDES"
echo "Libraries:                    $LIBS"
echo "------------------------------------------------------------"
echo " "


#----------------------------------------------------------#
# Compilation and installation                             #
#----------------------------------------------------------#

#Compiling FFTW library
source $ET/c_compile $FFTW
$AR libfftw.a $FFTW/*.o
if ( $SYS == "Darwin" ) then
	ranlib -s libfftw.a
endif
mv -f libfftw.a $ETLIB

#Compiling bsoft library
cd $BSOFT
source $ET/bsoft/cpp_compile $BSUBDIR
$AR libbsoft.a $BSOFT/*/*.o
if ( $SYS == "Darwin" ) then
	ranlib -s libbsoft.a
endif
mv -f libbsoft.a $ETLIB

#Compiling the I/O and utility files
cd $ETSRC
source $ET/cpp_compile $SUBDIR
$AR libelectra.a $ETSRC/*/*.o
if ( $SYS == "Darwin" ) then
	ranlib -s libelectra.a
endif
mv -f libelectra.a $ETLIB

# Compiling the main program source files
cd $ET
source $ET/cpp_compile $ETSRC

# Linking and installing all the programs
cd $ETSRC
foreach OFILE ( $OFILES )
	set PROG = `basename $OFILE .o`
	if ( $SET32) set PROG = `basename $OFILE .o`"32"
	echo Linking and installing: $PROG
	$CC $LINKOPTS -o $PROG $OFILE $LIBDIR $LIBS -O $WARN
	mv -f $PROG $ETBIN
end

cd $ETBIN
chmod +x *

echo "... done"
cd $ET


